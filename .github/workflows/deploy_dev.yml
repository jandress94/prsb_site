name: Deploy to Elastic Beanstalk (DEV)

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  ECR_REPOSITORY: prsb

jobs:
  package-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y zip

      - name: Install poetry
        run: pipx install "poetry==2.0.1"

      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'poetry'

      - name: Install python Dependencies
        run: poetry install

      - name: Prep static files
        run: poetry run python prsb/manage.py collectstatic --noinput

      - name: Build and tag Docker image
        run: |
          IMAGE_TAG=$(git rev-parse --short HEAD)
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
          docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:latest
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Push Docker image to ECR
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:latest

      - name: Package Dockerrun
        run: |
          IMAGE_TAG=$(git rev-parse --short HEAD)
          ZIP_FILE="deploy-$IMAGE_TAG.zip"
          zip -r $ZIP_FILE Dockerrun.aws.json
          echo "ZIP_FILE=$ZIP_FILE" >> $GITHUB_ENV

      - name: Upload to Elastic Beanstalk
        env:
          APPLICATION_NAME: Phinney Ridge Steel Band Site
          ENVIRONMENT_NAME: prsb-site-dev2
          S3_BUCKET: elasticbeanstalk-us-west-2-905418288995
        run: |
          IMAGE_TAG=$(git rev-parse --short HEAD)
          aws s3 cp $ZIP_FILE s3://$S3_BUCKET/$ZIP_FILE
          aws elasticbeanstalk create-application-version \
            --application-name "$APPLICATION_NAME" \
            --version-label "deploy-$IMAGE_TAG" \
            --source-bundle S3Bucket=$S3_BUCKET,S3Key=$ZIP_FILE
          aws elasticbeanstalk update-environment \
            --application-name "$APPLICATION_NAME" \
            --environment-name $ENVIRONMENT_NAME \
            --version-label "deploy-$IMAGE_TAG"
